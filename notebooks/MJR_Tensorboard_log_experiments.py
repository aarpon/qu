# -*- coding: utf-8 -*-
"""003_CNN experiments logging

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19W9h0U0QxHNEiqPicXa5f_HL7cYyg7Ve

# CNN experiment logging

In this notebook there are functions to save mdels and logs in a systematic way as well as a tensorboard visualisation tool
"""

# Commented out IPython magic to ensure Python compatibility.
import itertools
import os
import numpy as np
import cv2 
import pandas as pd
from matplotlib import pyplot as plt
import matplotlib
import json 

import tensorflow as tf
import tensorflow_hub as hub


# connect to gdrive
from google.colab import drive
drive.flush_and_unmount()
drive.mount('/gdrive', force_remount=True)

#code for students to locate data in their gdrive account
project_dir = "/gdrive/My Drive/brassicacea_automatic_classification/coding"

logs_dir = project_dir + "/logs"

models_dir = project_dir + "/models"


# %cd {project_dir} 
# %pwd

# import helper functions
import helper_functions as hp

"""## 1. Saving logs and models

 log_experiment() creates a callback that can be used to log training experiments and should be added to the training

 
"""

# function to save logs
def log_experiment(author_name, model_name, logs_dir):
  """ creates a folder in the logs folder using author name and model name & time.
  Returns a callback for tensorboard that points to that folder
  """
  import tensorflow as tf
  from datetime import datetime
  
  fold_name=author_name + "_" + model_name + "_" + datetime.now().strftime("%Y%m%d-%H%M%S")
  log_path = logs_dir + "/" + fold_name
      
  tboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_path, histogram_freq=0, write_graph=True, write_images=False, update_freq='epoch', profile_batch=10, embeddings_freq=0, embeddings_metadata=None)

  print(f"created logs folder {log_path}")
  return tboard_callback
# testing
test = log_experiment("M", "function_test", logs_dir)
# function to save  models

def save_keras_model(model, author_name, model_name, models_dir):
  """function to save models using datetime
  parameters:
      model - tf model - model to save
      project_dir: string - path to main directory of the project
      model_name: string - name of the model to use for folder"""
  from datetime import datetime

  fold_name = author_name + "_" + model_name + "_" + datetime.now().strftime("%Y%m%d-%H%M%S")
  model_path= models_dir + "/" + fold_name
  os.mkdir(model_path) 
  model.save(model_path)
  print(f"model saved in folder {fold_name}")

"""## Visualize logs on tensorboard

here to visualise experiments

"""

!pip install -U tensorboard_plugin_profile

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext tensorboard

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

!kill 1316

# Commented out IPython magic to ensure Python compatibility.
# write path hard coded, not with variable
# %tensorboard --logdir='/gdrive/My Drive/brassicacea_automatic_classification/coding/logs/Mask_RCNN'

